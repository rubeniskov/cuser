#!/usr/bin/env node 

const path = require('path');
const fs = require('fs');
const { execSync } = require('child_process');
const glob = require('glob');
const pkg = require(path.resolve(process.cwd(), 'package.json'));

const { workspaces } = pkg;

const files = glob.sync(`${workspaces.packages.join(',')}`);

const coverageJson = path.resolve(process.cwd(), 'coverage.json');

const result = files.map((dir) => {  
  if (!fs.existsSync(`${dir}/.nyc_output`)) return {};
  execSync(`./node_modules/.bin/nyc merge ${dir}/.nyc_output ${coverageJson}`);
  const res = JSON.parse(fs.readFileSync(coverageJson, { encoding: 'utf8' }));
  return res;
})
.reduce((prev, cur) => ({ ...prev, ...cur }), {});

fs.writeFileSync(coverageJson, JSON.stringify(result, null , 2), { encoding: 'utf8' });
